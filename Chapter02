* 배열 기본 입출력

5개의 문자형 원소를 배열로 입력 받아 역순으로 출력하는 프로그램을 작성하시오

//5개 문자형 원소를 입력 받아 역순으로 출력해보자.
//순서대로 출력한 다음 수정하여 작성해 보자.
#include <stdio.h>
int main(){
	char a[5];
	int i;
	
	for (i = 0; i <= 4; i++) {
		scanf(" %c", &a[i]); // 공백을 앞에 넣는 방법, 또는 
		//getchar();
	}
	for (i = 4; i >= 0; i--) {
		printf("%c", a[i]);
	}
    return 0;
}
* 배열 원소 입력 및 출력

정수를 입력 받다 0이 입력되면 지금까지 입력된 정수를 역순으로 출력하는 프로그램을 작성하시오

단, 입력되는 정수의 수는 최대 100개 이다

#include <stdio.h>
int num;
int main() {
	int a[100]={0}, size=0, scale;
	scale = inputArray(a[]);
	outputArray(a[]);
	return 0;
}
int inputArray(int a[]) {
	for (int i = 0;  ; i++) {
		scanf("%d", &num);
		if (num != 0) {
			a[i] = num;
		}
		else if (num == 0) {
			size = i;
			break; // break는 if문을 빠져 나가는 것이 아닌 무조건 반복문을 빠져 나가는 것이다
		}
	}
}
void outputArray(int a[]) {
	for (int i = size - 1; i >= 0; i--) {
		printf("%d ", a[i]);
	}
}
* 배열 원소 연산 (삽입 및 삭제)

배열의 크기 선언

자료의 삽입


a[6] ← a[5];

a[5] ← a[4];

.......

a[3] ← a[2]; // a[i+1] = a[i]

a[2] ← 삽입 데이터

​

3. 자료의 삭제


a[1] ← a[2];

a[2] ← a[3];

a[3] ← a[4]; //a[i] = a[i+1]

a[2] ← 삽입 데이터

​

<< 모듈화 프로그래밍 >>

함수 : 소프트웨어에서 특정 동작을 수행하는 일정 코드 부분

- 프로그램을 구성하는 기본적인 구성요소이며 하나의 프로그램에 여러 함수가 포함될 수 있다

​

구조

-함수호출 : 매개변수, 인자

-함수가 호출 후 계산을 수행

-함수가 종료 후 실행 흐름이 원래 루틴으로 돌아옴 

→ 경우에 따라서는 함수가 계산하여 반환된 값을 원래의 루틴에서 사용

​

사용자 정의 함수 만들기

- 함수선언

- 함수정의

- 함수호출


사용자 정의 함수를 이용한 배열의 입출력, 원소 삽입 및 삭제

#include <stdio.h>
void inputArray( int a[], int size);
void outputArray( int a[], int size);
int insertArray( int a[], int num, int index, int size);
int deleteArray( int a[], int index, int size);

int main(){
  int a[10], size=0 ;
  size = insertArray( a, 10, 0, size);
  size = insertArray( a, 20, 1, size);
  size = insertArray( a, 30, 2, size);
  size = insertArray( a, 50, 2, size);
	outputArray(a,size);
	size = deleteArray(a, 1, size);
  outputArray(a, size);
  return 0;
}
void inputArray( int a[], int size){
    int i;
   scanf("%d ", &a[i]); //배열에 크기 만큼 데이터 입력
}
void outputArray( int a[], int size){
	int i;
		for (int i = 0; i < size; i++) {
			//printf("%p", &a[i]);
			printf("%d ", a[i]); //배열 크기 만큼 데이터 출력
		}
	printf("\n");
}
int insertArray( int a[], int num, int index, int size){ //insertArray(a, 10, 0, 0);
	//size = 0, num = 10, index = 0;
    if (index == size) {
			a[index] = num;
			size++;
		 } 
	  else{    // 여기에 배열 중간에 원소 삽입 코드
			for (int i = size; i >= index + 1; i--) {
				a[i] = a[i - 1];
				size++;
			}
			a[index] = num;
		}
  return size;
}
int deleteArray( int a[], int index, int size){
  if (index == size -1) { //여기에 배열 끝부분 원소 삭제 코드
		a[index] = 0;
		size--;
    }
	else{ //여기에 배열 중간의 원소 삭제 코드
		size--;
		for (int i = index; i <= size - 1; i++) {
			a[i] = a[i + 1];
		}
	}
  return size;
}
​
